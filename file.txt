<!-- 
    <script>
      document.getElementById("btnHome").onclick = function () {
        axios
          .get("http://localhost:4008/api/booklist")
          .then(function (response) {
            const data = response.data;
            document.getElementById("books").innerHTML = data
              .map(function (book) {
                return '<li class="row">' + book;
              })
              .join("");
          })
          .catch(function (err) {
            document.getElementById("books").innerHTML =
              '<li class="text-danger">' + err.message + "</li>";
          });
      };
    </script>
    -->
html 

    server 
    // app.get("/api/booklist", (req, res) => {
//   let Books = ["A", "B", "C"];
//   res.status(200).send(friends);
// });



app.get("/register", (req, res) => {
  res.render("register.html");
});
**register
app.post("/register", async (req, res) => {
  try {
    const hashedPassword = await bcrypt.hash(req.body.password, 7);
    users.push({
      id: Date.now().toString(),
      name: req.body.name,
      email: req.body.email,
      password: hashedPassword,
    });
    res.redirect("/login");
  } catch {
    res.redirect("/register");
  }
  console.log(users);
});



main.js

const booksContainer = document.querySelector("#books-container");
const form = document.querySelector("form");

const baseURL = `http://localhost:4008/api/books`;

const booksCallback = ({ data: books }) => displayBooks(books);
const errCallback = (err) => console.log(err.response.data);

const getAllBooks = () =>
  axios.get(baseURL).then(booksCallback).catch(errCallback);
const createBook = (body) =>
  axios.post(baseURL, body).then(booksCallback).catch(errCallback);
const deleteBook = (id) =>
  axios.delete(`${baseURL}/${id}`).then(booksCallback).catch(errCallback);
const updateBook = (id, type) =>
  axios
    .put(`${baseURL}/${id}`, { type })
    .then(booksCallback)
    .catch(errCallback);

function submitHandler(e) {
  e.preventDefault();

  let title = document.querySelector("#title");
  let rating = document.querySelector('input[name="ratings"]:checked');
  let imageURL = document.querySelector("#img");

  let bodyObj = {
    title: title.value,
    rating: rating.value,
    imageURL: imageURL.value,
  };

  createBook(bodyObj);

  title.value = "";
  rating.checked = false;
  imageURL.value = "";
}

function createBookCard(book) {
  const bookCard = document.createElement("div");
  bookCard.classList.add("book-card");

  bookCard.innerHTML = `<img alt='book cover' src=${book.imageURL} class="book-cover"/>
    <p class="book-title">${book.title}</p>
    <div class="btns-container">
        <button onclick="updateBook(${book.id}, 'minus')">-</button>
        <p class="book-rating">${book.rating} stars</p>
        <button onclick="updateBook(${book.id}, 'plus')">+</button>
    </div>
    <button onclick="deleteBook(${book.id})">delete</button>
    `;

  booksContainer.appendChild(bookCard);
}

function displayBooks(arr) {
  booksContainer.innerHTML = ``;
  for (let i = 0; i < arr.length; i++) {
    createBookCard(arr[i]);
  }
}

form.addEventListener("submit", submitHandler);

getAllBooks();


// server .js

const express = require("express");
const cors = require("cors");
const path = require("path");
const bcrypt = require("bcrypt");

const {
  getBooks,
  createBook,
  updateBook,
  deleteBook,
} = require("./controller.js");

const books = require("./db.json");
const app = express();

app.use(express.json());
app.use(cors());

const users = [];

//Endpoints and Middleware
//app.use("/", express.static(path.join(__dirname, "../public/index.html")));

app.use("/styles", express.static(path.join(__dirname, "../public/index.css")));
app.use("/js", express.static(path.join(__dirname, "../public/main.js")));

app.get("/", function (req, res) {
  res.sendFile(path.join(__dirname, "../public/index.html"));
});
//***********
app.get("/api/books", getBooks);
app.post("/api/books", createBook);
app.put("/api/books/:id", updateBook);
app.delete("/api/books/:id", deleteBook);

app.get("/", (req, res) => {
  res.render("index.html", { name: "Israel" });
});

const port = process.env.PORT || 4008;

app.listen(port, () => {
  console.log(`Server is running on port ${port}`);
});
